#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
# $HOME: /app

set -e

BUILD_DIR=${1:-.}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

###############################################################################
# helper: cp that silently no-ops when src and dst are the same path
###############################################################################
safe_cp () {
  local src="$1" dst="$2"; shift 2
  if [ "$src" != "$dst" ]; then
    cp "$@" "$src" "$dst"
  else
    echo "skip cp: $src == $dst"
  fi
}

###############################################################################
# 1 – restore cached source (Heroku only; skipped on Scalingo)
###############################################################################
safe_cp "$CACHE_DIR/." "$BUILD_DIR" -rp

HEROKU_DIR="$BUILD_DIR/.heroku"
BIN_DIR="$HEROKU_DIR/bin"

###############################################################################
# 2 – mirror build → $HOME (skipped when identical paths)
###############################################################################
safe_cp "$BUILD_DIR" "$HOME" -rpT
cd "$HOME"

# optional pinned Deno version
if [ -f runtime.txt ]; then
  INSTALL_VERSION_OPTION="-s $(cat runtime.txt)"
fi
echo "$INSTALL_VERSION_OPTION"

# install Deno
export DENO_INSTALL="$BUILD_DIR/.heroku"
export DENO_DIR="$BUILD_DIR/.heroku/cache"
curl -fsSL https://deno.land/x/install/install.sh | sh $INSTALL_VERSION_OPTION

# runtime env vars
PROFILE_PATH="$BUILD_DIR/.profile.d/deno.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo 'export PATH="$HOME/.heroku/bin:$PATH"'  >> "$PROFILE_PATH"
echo 'export DENO_DIR="$HOME/.heroku/cache"' >> "$PROFILE_PATH"

set +e

# dependency cache (optional)
if [ -f Procfile ]; then
  SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)
  source "$SCRIPT_DIR/get_cache_command.sh"
  COMMAND=$(grep -E '^(web|worker):' Procfile)
  if [ -n "$COMMAND" ]; then
    CACHE_COMMAND=$(get_cache_command "$COMMAND")
    [ -n "$CACHE_COMMAND" ] && "$BIN_DIR/$CACHE_COMMAND"
  fi
fi

# custom build or Aleph.js
if [ -f heroku_build.ts ]; then
  "$BIN_DIR/deno" run -A --unstable heroku_build.ts
  #############################################################################
  # 3 – mirror $HOME → build (skipped when identical paths)
  #############################################################################
  safe_cp "$HOME" "$BUILD_DIR" -rpT
elif [ -f aleph.config.ts ] && [ -f import_map.json ]; then
  ALEPH_PATH=$(jq -r '.imports."aleph/"' import_map.json)
  "$BIN_DIR/deno" run --allow-net \
                       --allow-read="$HOME,$BUILD_DIR/.heroku" \
                       --allow-write --allow-env --allow-run \
                       "${ALEPH_PATH}cli.ts" build
  "$BIN_DIR/deno" run --allow-net=deno.land \
                       "${ALEPH_PATH}cli.ts" start --help > /dev/null
  safe_cp .aleph "$BUILD_DIR/." -rp
fi
